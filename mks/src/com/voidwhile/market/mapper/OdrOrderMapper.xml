<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.voidwhile.market.mapper.OdrOrderMapper">
  <resultMap id="BaseResultMap" type="com.voidwhile.market.entity.OdrOrder">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="order_code" jdbcType="VARCHAR" property="orderCode" />
    <result column="member_id" jdbcType="BIGINT" property="memberId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="pay_status" jdbcType="INTEGER" property="payStatus" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="pay_type" jdbcType="INTEGER" property="payType" />
    <result column="addr_id" jdbcType="BIGINT" property="addrId" />
    <result column="total_amount" jdbcType="DOUBLE" property="totalAmount" />
    <result column="flowNum" jdbcType="VARCHAR" property="flownum" />
    <result column="type_name" jdbcType="BIGINT" property="payTypeName" />
    <result column="status_name" jdbcType="BIGINT" property="statusName" />
    <association property="member" javaType="com.voidwhile.market.entity.MbeMember" column="member_id" select="com.voidwhile.market.mapper.MbeMemberMapper.selectByPrimaryKey" />
    <association property="addr" javaType="com.voidwhile.market.entity.MbeAddress" column="addr_id" select="com.voidwhile.market.mapper.MbeAddressMapper.selectByPrimaryKey" />
    <collection property="detailList" column="order_id" ofType="com.voidwhile.market.entity.OdrOrderDetail" select="com.voidwhile.market.mapper.OdrOrderDetailMapper.findByOrderId"/>
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    order_id, order_code, member_id, moo.create_time, moo.status, pay_status, pay_time, moo.pay_type, 
    addr_id, total_amount, flowNum,mpt.type_name,mos.status_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from mk_odr_order moo 
  LEFT JOIN mk_pay_type mpt ON moo.pay_type = mpt.pay_type
  LEFT JOIN mk_odr_status mos ON moo.status = mos.order_status
    where order_id = #{orderId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from mk_odr_order
    where order_id = #{orderId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.voidwhile.market.entity.OdrOrder" keyProperty="orderId" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into mk_odr_order ( order_code, member_id, 
      create_time, status, pay_status, 
      pay_time, pay_type, addr_id, 
      total_amount, flowNum)
    values ( #{orderCode,jdbcType=VARCHAR}, #{memberId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{payStatus,jdbcType=INTEGER}, 
      #{payTime,jdbcType=TIMESTAMP}, #{payType,jdbcType=INTEGER}, #{addrId,jdbcType=BIGINT}, 
      #{totalAmount,jdbcType=DOUBLE}, #{flownum,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.voidwhile.market.entity.OdrOrder" keyProperty="orderId" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into mk_odr_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderCode != null">
        order_code,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="addrId != null">
        addr_id,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="flownum != null">
        flowNum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderCode != null">
        #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="addrId != null">
        #{addrId,jdbcType=BIGINT},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=DOUBLE},
      </if>
      <if test="flownum != null">
        #{flownum,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.voidwhile.market.entity.OdrOrder">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update mk_odr_order
    <set>
      <if test="orderCode != null">
        order_code = #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="addrId != null">
        addr_id = #{addrId,jdbcType=BIGINT},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=DOUBLE},
      </if>
      <if test="flownum != null">
        flowNum = #{flownum,jdbcType=VARCHAR},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.voidwhile.market.entity.OdrOrder">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update mk_odr_order
    set order_code = #{orderCode,jdbcType=VARCHAR},
      member_id = #{memberId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      pay_status = #{payStatus,jdbcType=INTEGER},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      pay_type = #{payType,jdbcType=INTEGER},
      addr_id = #{addrId,jdbcType=BIGINT},
      total_amount = #{totalAmount,jdbcType=DOUBLE},
      flowNum = #{flownum,jdbcType=VARCHAR}
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
  
  <sql id="selectWhereClause">
	<where>
		<trim prefixOverrides="and">

			<if test="orderCode !=null and orderCode!=''">
				and order_code = #{orderCode,jdbcType=VARCHAR}
			</if>
			<if test="cmdName !=null and cmdName!=''">
				and order_id in (select order_id from mk_odr_order_detail mood,mk_cmd_commodity mcc where mood.cmd_id = mcc.cmd_id and mcc.cmd_name like CONCAT('%',#{cmdName},'%'))
			</if>
			<if test="memberName !=null and memberName!=''">
				and member_id in (select member_id from mk_mbe_member where real_name like CONCAT('%', #{memberName},'%'))
			</if>
			<if test="memberId !=null">
				and member_id = #{memberId}
			</if>
			<if test="status !=null">
				and moo.status = #{status,jdbcType=INTEGER}
			</if>
			<if test="payStatus !=null">
				and pay_status = #{payStatus,jdbcType=INTEGER}
			</if>
			<if test="startTime !=null and startTime!=''">
				and moo.create_time <![CDATA[ > ]]> str_to_date(#{startTime},'%Y-%m-%d')
			</if>
			<if test="endTime !=null and endTime!=''">
				and moo.create_time  <![CDATA[ < ]]> str_to_date(#{endTime},'%Y-%m-%d')
			</if>
			
		</trim>
	</where>
  </sql>
  <select id="findByMap" parameterType="java.util.Map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mk_odr_order moo
    left join mk_pay_type mpt on moo.pay_type = mpt.pay_type
    left join mk_odr_status mos on moo.status = mos.order_status
    <include refid="selectWhereClause" />
	order by pay_status desc,moo.status
	<if test="offset != null and pageSize != null">
		limit #{offset} , #{pageSize}
	</if>
  </select>
  <select id="countByMap" parameterType="java.util.Map" resultType="java.lang.Integer">
	select count(*) from mk_odr_order moo
	<include refid="selectWhereClause" />
  </select>
  
  <update id="deliver" parameterType="java.lang.Long">
  	update mk_odr_order set status = 3 where order_id = #{orderId}
  </update>
  
  <update id="giveUp" parameterType="java.lang.Long">
  	update mk_odr_order set status = 2 where order_id = #{orderId}
  </update>
  
</mapper>