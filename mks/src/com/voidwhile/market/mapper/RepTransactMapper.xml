<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.voidwhile.market.mapper.RepTransactMapper">
  <resultMap id="BaseResultMap" type="com.voidwhile.market.entity.RepTransact">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="trans_id" jdbcType="BIGINT" property="transId" />
    <result column="inventory_id" jdbcType="BIGINT" property="inventoryId" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="trans_type" jdbcType="INTEGER" property="transType" />
    <result column="trans_time" jdbcType="TIMESTAMP" property="transTime" />
    <result column="supplier_id" jdbcType="BIGINT" property="supplierId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="brand_id" jdbcType="BIGINT" property="brandId" />
    <result column="unit_price" jdbcType="DOUBLE" property="unitPrice" />
    <result column="fcd" jdbcType="TIMESTAMP" property="fcd" />
    <result column="supplier_name" jdbcType="VARCHAR" property="supplierName" />
    <result column="brand_name" jdbcType="VARCHAR" property="brandName" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="cmd_name" jdbcType="VARCHAR" property="cmdName" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    trans_id, mrt.inventory_id, amount,unit_price, trans_type, trans_time, mrt.supplier_id, fcd,
    mrs.supplier_name,mcb.brand_name,su.real_name,mcc.cmd_name
  </sql>
  
  <sql id="selectWhereClause">
  	<where>
  	<trim prefixOverrides="and">
		<if test="startTime !=null and startTime!=''">
			and trans_time <![CDATA[ >= ]]> str_to_date(#{startTime},'%Y-%m-%d')
		</if>
		<if test="endTime !=null and endTime!=''">
			and trans_time  <![CDATA[ <= ]]> str_to_date(#{endTime},'%Y-%m-%d')
		</if>
		<if test="inventoryId !=null">
			AND mrt.inventory_id = #{inventoryId}
		</if>
	</trim>
  	</where>
  </sql>
  
  <select id="selectByMap" parameterType="java.util.Map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    FROM mk_rep_transact mrt 
    INNER JOIN mk_rep_inventory mri ON mrt.inventory_id = mri.inventory_id
    INNER JOIN mk_cmd_commodity mcc ON mri.cmd_id = mcc.cmd_id
    LEFT JOIN mk_rep_supplier mrs ON mrt.supplier_id = mrs.supplier_id
    LEFT JOIN mk_cmd_brand mcb ON mrt.brand_id = mcb.brand_id 
    LEFT JOIN sys_user su ON mrt.user_id = su.uid 
    <include refid="selectWhereClause" />
	order by trans_time desc
	<if test="offset != null and pageSize != null">
		limit #{offset} , #{pageSize}
	</if>
  </select>
  
  <select id="countByMap" parameterType="java.util.Map" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    count(*)
    FROM mk_rep_transact mrt 
    INNER JOIN mk_rep_inventory mri ON mrt.inventory_id = mri.inventory_id
    INNER JOIN mk_cmd_commodity mcc ON mri.cmd_id = mcc.cmd_id
    LEFT JOIN mk_rep_supplier mrs ON mrt.supplier_id = mrs.supplier_id
    LEFT JOIN mk_cmd_brand mcb ON mrt.brand_id = mcb.brand_id 
    LEFT JOIN sys_user su ON mrt.user_id = su.uid 
    <include refid="selectWhereClause" />
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from mk_rep_transact
    where trans_id = #{transId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.voidwhile.market.entity.RepTransact">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into mk_rep_transact (trans_id, inventory_id, amount, 
      trans_type, trans_time, supplier_id, 
      user_id, brand_id, unit_price, 
      fcd)
    values (#{transId,jdbcType=BIGINT}, #{inventoryId,jdbcType=BIGINT}, #{amount,jdbcType=DOUBLE}, 
      #{transType,jdbcType=INTEGER}, #{transTime,jdbcType=TIMESTAMP}, #{supplierId,jdbcType=BIGINT}, 
      #{userId,jdbcType=BIGINT}, #{brandId,jdbcType=BIGINT}, #{unitPrice,jdbcType=DOUBLE}, 
      #{fcd,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.voidwhile.market.entity.RepTransact">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into mk_rep_transact
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="transId != null">
        trans_id,
      </if>
      <if test="inventoryId != null">
        inventory_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="transType != null">
        trans_type,
      </if>
      <if test="transTime != null">
        trans_time,
      </if>
      <if test="supplierId != null">
        supplier_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="brandId != null">
        brand_id,
      </if>
      <if test="unitPrice != null">
        unit_price,
      </if>
      <if test="fcd != null">
        fcd,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="transId != null">
        #{transId,jdbcType=BIGINT},
      </if>
      <if test="inventoryId != null">
        #{inventoryId,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="transType != null">
        #{transType,jdbcType=INTEGER},
      </if>
      <if test="transTime != null">
        #{transTime,jdbcType=TIMESTAMP},
      </if>
      <if test="supplierId != null">
        #{supplierId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="brandId != null">
        #{brandId,jdbcType=BIGINT},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=DOUBLE},
      </if>
      <if test="fcd != null">
        #{fcd,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.voidwhile.market.entity.RepTransact">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update mk_rep_transact
    <set>
      <if test="inventoryId != null">
        inventory_id = #{inventoryId,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="transType != null">
        trans_type = #{transType,jdbcType=INTEGER},
      </if>
      <if test="transTime != null">
        trans_time = #{transTime,jdbcType=TIMESTAMP},
      </if>
      <if test="supplierId != null">
        supplier_id = #{supplierId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="brandId != null">
        brand_id = #{brandId,jdbcType=BIGINT},
      </if>
      <if test="unitPrice != null">
        unit_price = #{unitPrice,jdbcType=DOUBLE},
      </if>
      <if test="fcd != null">
        fcd = #{fcd,jdbcType=TIMESTAMP},
      </if>
    </set>
    where trans_id = #{transId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.voidwhile.market.entity.RepTransact">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update mk_rep_transact
    set inventory_id = #{inventoryId,jdbcType=BIGINT},
      amount = #{amount,jdbcType=DOUBLE},
      trans_type = #{transType,jdbcType=INTEGER},
      trans_time = #{transTime,jdbcType=TIMESTAMP},
      supplier_id = #{supplierId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      brand_id = #{brandId,jdbcType=BIGINT},
      unit_price = #{unitPrice,jdbcType=DOUBLE},
      fcd = #{fcd,jdbcType=TIMESTAMP}
    where trans_id = #{transId,jdbcType=BIGINT}
  </update>
</mapper>